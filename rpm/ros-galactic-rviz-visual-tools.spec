%bcond_without tests
%bcond_without weak_deps

%global __os_install_post %(echo '%{__os_install_post}' | sed -e 's!/usr/lib[^[:space:]]*/brp-python-bytecompile[[:space:]].*$!!g')
%global __provides_exclude_from ^/opt/ros/galactic/.*$
%global __requires_exclude_from ^/opt/ros/galactic/.*$

Name:           ros-galactic-rviz-visual-tools
Version:        4.1.2
Release:        1%{?dist}%{?release_suffix}
Summary:        ROS rviz_visual_tools package

License:        BSD
URL:            https://github.com/PickNikRobotics/rviz_visual_tools
Source0:        %{name}-%{version}.tar.gz

Requires:       eigen3-devel
Requires:       qt5-qtbase
Requires:       ros-galactic-ament-index-python
Requires:       ros-galactic-eigen-stl-containers
Requires:       ros-galactic-eigen3-cmake-module
Requires:       ros-galactic-geometry-msgs
Requires:       ros-galactic-interactive-markers
Requires:       ros-galactic-launch
Requires:       ros-galactic-launch-ros
Requires:       ros-galactic-pluginlib
Requires:       ros-galactic-rclcpp
Requires:       ros-galactic-rclcpp-components
Requires:       ros-galactic-rviz-common
Requires:       ros-galactic-rviz-default-plugins
Requires:       ros-galactic-rviz-ogre-vendor
Requires:       ros-galactic-rviz-rendering
Requires:       ros-galactic-rviz2
Requires:       ros-galactic-sensor-msgs
Requires:       ros-galactic-shape-msgs
Requires:       ros-galactic-std-msgs
Requires:       ros-galactic-tf2
Requires:       ros-galactic-tf2-eigen
Requires:       ros-galactic-tf2-geometry-msgs
Requires:       ros-galactic-trajectory-msgs
Requires:       ros-galactic-visualization-msgs
Requires:       ros-galactic-ros-workspace
BuildRequires:  eigen3-devel
BuildRequires:  qt5-qtbase-devel
BuildRequires:  ros-galactic-ament-cmake
BuildRequires:  ros-galactic-ament-cmake-gtest
BuildRequires:  ros-galactic-ament-lint-auto
BuildRequires:  ros-galactic-ament-lint-common
BuildRequires:  ros-galactic-eigen-stl-containers
BuildRequires:  ros-galactic-eigen3-cmake-module
BuildRequires:  ros-galactic-geometry-msgs
BuildRequires:  ros-galactic-interactive-markers
BuildRequires:  ros-galactic-pluginlib
BuildRequires:  ros-galactic-rclcpp
BuildRequires:  ros-galactic-rclcpp-components
BuildRequires:  ros-galactic-rviz-common
BuildRequires:  ros-galactic-rviz-default-plugins
BuildRequires:  ros-galactic-rviz-ogre-vendor
BuildRequires:  ros-galactic-rviz-rendering
BuildRequires:  ros-galactic-sensor-msgs
BuildRequires:  ros-galactic-shape-msgs
BuildRequires:  ros-galactic-std-msgs
BuildRequires:  ros-galactic-tf2
BuildRequires:  ros-galactic-tf2-eigen
BuildRequires:  ros-galactic-tf2-geometry-msgs
BuildRequires:  ros-galactic-trajectory-msgs
BuildRequires:  ros-galactic-visualization-msgs
BuildRequires:  ros-galactic-ros-workspace
Provides:       %{name}-devel = %{version}-%{release}
Provides:       %{name}-doc = %{version}-%{release}
Provides:       %{name}-runtime = %{version}-%{release}

%description
Utility functions for displaying and debugging data in Rviz via published
markers

%prep
%autosetup -p1

%build
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree and source it.  It will set things like
# CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/galactic/setup.sh" ]; then . "/opt/ros/galactic/setup.sh"; fi
mkdir -p obj-%{_target_platform} && cd obj-%{_target_platform}
%cmake3 \
    -UINCLUDE_INSTALL_DIR \
    -ULIB_INSTALL_DIR \
    -USYSCONF_INSTALL_DIR \
    -USHARE_INSTALL_PREFIX \
    -ULIB_SUFFIX \
    -DCMAKE_INSTALL_PREFIX="/opt/ros/galactic" \
    -DAMENT_PREFIX_PATH="/opt/ros/galactic" \
    -DCMAKE_PREFIX_PATH="/opt/ros/galactic" \
    -DSETUPTOOLS_DEB_LAYOUT=OFF \
    ..

%make_build

%install
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree and source it.  It will set things like
# CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/galactic/setup.sh" ]; then . "/opt/ros/galactic/setup.sh"; fi
%make_install -C obj-%{_target_platform}

%if 0%{?with_tests}
%check
# Look for a Makefile target with a name indicating that it runs tests
TEST_TARGET=$(%__make -qp -C obj-%{_target_platform} | sed "s/^\(test\|check\):.*/\\1/;t f;d;:f;q0")
if [ -n "$TEST_TARGET" ]; then
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree and source it.  It will set things like
# CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/galactic/setup.sh" ]; then . "/opt/ros/galactic/setup.sh"; fi
CTEST_OUTPUT_ON_FAILURE=1 \
    %make_build -C obj-%{_target_platform} $TEST_TARGET || echo "RPM TESTS FAILED"
else echo "RPM TESTS SKIPPED"; fi
%endif

%files
/opt/ros/galactic

%changelog
* Mon Dec 13 2021 Mike Lautman <mike@picknik.ai> - 4.1.2-1
- Autogenerated by Bloom

* Fri Oct 08 2021 Mike Lautman <mike@picknik.ai> - 4.1.1-1
- Autogenerated by Bloom

* Tue Sep 14 2021 Mike Lautman <mike@picknik.ai> - 4.1.0-1
- Autogenerated by Bloom

